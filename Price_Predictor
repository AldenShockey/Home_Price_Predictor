df = pd.read_csv(url_train, parse_dates=['Yr_Sold'], index_col='Yr_Sold')

plt.scatter(df['Gr_Liv_Area'], df['SalePrice'])
plt.xlabel('Ground living area')
plt.ylabel('Sale price')

target = 'SalePrice'
X = df.drop(columns=target)
y = df[target]

mask = X.index < '2009'
X_train, y_train = X.loc[mask], y.loc[mask]
X_val, y_val = X.loc[~mask], y.loc[~mask]

y_mean = [df['SalePrice'].mean()]*len(y_train)
baseline_mae = mean_absolute_error(y_train, y_mean)
print('Baseline MAE:', baseline_mae)

model_lr = make_pipeline(
    OneHotEncoder(use_cat_names=True),
    StandardScaler(),
    LinearRegression()
)

model_lr.fit(X_train, y_train);

model_r = make_pipeline(
    OneHotEncoder(use_cat_names=True),
    StandardScaler(),
    Ridge(alpha=175, normalize=False)
)

model_r.fit(X_train, y_train);

model_lr_training_mae = mean_absolute_error(y_train, model_lr.predict(X_train))

model_lr_validation_mae = mean_absolute_error(y_val, model_lr.predict(X_val))

model_r_training_mae = mean_absolute_error(y_train, model_r.predict(X_train))

model_r_validation_mae = mean_absolute_error(y_val, model_r.predict(X_val))

print('Linear Regression Model')
print('Training MAE:', model_lr_training_mae)
print('Validation MAE:', model_lr_validation_mae)
print()
print('Ridge Regression Model')
print('Training MAE:', model_r_training_mae)
print('Validation MAE:', model_r_validation_mae)

model_lr_r2_score = r2_score(y_val, model_lr.predict(X_val))

model_r_r2_score = r2_score(y_val, model_r.predict(X_val))

print('Linear Regression R^2:', model_lr_r2_score)
print('Ridge Regression R^2:', model_r_r2_score)

y_pred = model_r.predict(X_test)
print('My predictions:', y_pred[:3])

coef = model_r.named_steps['ridge'].coef_
feats = model_r.named_steps['onehotencoder'].get_feature_names()
pd.Series(coef, index=feats).sort_values(key=abs).tail(10).plot(kind='barh')
plt.xlabel('importance')
plt.ylabel('features')